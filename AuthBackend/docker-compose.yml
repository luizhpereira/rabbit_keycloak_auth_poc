version: '3.4'

services:
  authapi:
   image: pocdaprimages.azurecr.io/authapi:dev
   build:
     context: .
     dockerfile: authapi/Dockerfile
   environment:
       - ASPNETCORE_ENVIRONMENT=Development
   ports:
       - "8089:80"
   networks:
       - auth-network
   restart: always


  rabbitmq:
   image: rabbitmq:3-management-alpine
   container_name: 'rabbitmq'
   ports:
       - 4672:5672
       - 14672:15672
       - 11883:1883
   volumes:
       - ./docker-conf/rabbitmq/config/rabbitmq.conf:/etc/rabbitmq/rabbitmq.conf
       - ./docker-conf/rabbitmq/config/enabled_plugins:/etc/rabbitmq/enabled_plugins
   networks:
       - auth-network
   restart: always 


  postgres-db:
    image: postgres:latest
    container_name: postgres-db
    ports:
        - 5432:5432
    environment:
      POSTGRES_USER: keycloak
      POSTGRES_PASSWORD: admin
      POSTGRES_DB: keycloak
    volumes:
        - postgres-data:/var/lib/postgresql/data
    networks:
        - auth-network
    restart: always 


  keycloak:
    build:
      context: .
      dockerfile: keycloak.Dockerfile
    container_name: keycloak
    command: start-dev
    environment:
      KC_HEALTH_ENABLED: 'true'
      KC_METRICS_ENABLED: 'true'
      KC_DB: postgres
      KC_DB_URL: jdbc:postgresql://postgres-db:5432/keycloak
      KC_DB_USERNAME: keycloak
      KC_DB_PASSWORD: admin
      KC_HOSTNAME: localhost
      KEYCLOAK_ADMIN: <insertUsername>
      KEYCLOAK_ADMIN_PASSWORD: <insertPassword>
    ports:
      - "8088:8080"
      - "8087:8443"
    networks:
        - auth-network
    depends_on:
      - postgres-db   


networks:
  auth-network:

volumes:
  keycloak-data:
  postgres-data:

